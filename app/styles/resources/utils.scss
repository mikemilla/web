// Sets selection for text and things
@mixin select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  user-select: $value;
}

// Setting columns
@mixin columns($count) {
  -moz-column-count: $count;
  -webkit-column-count: $count;
  column-count: $count;
}

// Setting column gap
@mixin column-gap($size) {
  -webkit-column-gap: $size;
  -moz-column-gap: $size;
  column-gap: $size;
}

// Flex support
@mixin flex() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// Corner radius support
@mixin corner-radius($radius) {
  border-radius: $radius $radius $radius $radius;
  -moz-border-radius: $radius $radius $radius $radius;
  -webkit-border-radius: $radius $radius $radius $radius;
}

// Adds border as... border
@mixin border($color) {
  border: solid 2px $color;
}

// Fills the parent
@mixin fill-parent() {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

// Flex support
@mixin hidden-overlay-fix() {
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  transform: translateX(0);
}

// Set the style for a button with a color
@mixin action-style($color) {
  color: $color-font;
  border-color: $color-border;

  // Desktop styles
  &:hover {
    border-color: $color-border;
    background: $color;
    color: white;
  }
  &:active {
    background: darken($color, 10%);
    color: white;
  }

  // Touches on mobile
  @include device-breakpoint($tablet) {
    &:hover {
      border-color: $color-border;
      background: transparent;
      color: $color-font;
    }
    &:active {
      background: $color;
      color: white;
    }
  }
}

// Animate with ease
@mixin transition-ease-in-out($duration) {
  -webkit-transition: all $duration cubic-bezier(0.4, 0.0, 0.0, 1.000); 
  -moz-transition: all $duration cubic-bezier(0.4, 0.0, 0.0, 1.000); 
  -o-transition: all $duration cubic-bezier(0.4, 0.0, 0.0, 1.000); 
  transition: all $duration cubic-bezier(0.4, 0.0, 0.0, 1.000);
}

// Spring Animation
@mixin transition-spring($duration) {
  -webkit-transition: all $duration cubic-bezier(0.575, 0.870, 0.000, 1);
  -webkit-transition: all $duration cubic-bezier(0.575, 0.870, 0.000, 1.1);
  -moz-transition: all $duration cubic-bezier(0.575, 0.870, 0.000, 1.1);
  -o-transition: all $duration cubic-bezier(0.575, 0.870, 0.000, 1.1);
  transition: all $duration cubic-bezier(0.575, 0.870, 0.000, 1.1);
}

// Spring timing funcion
@mixin timing-spring() {
  -webkit-transition-timing-function: cubic-bezier(0.575, 0.870, 0.000, 1);
  -moz-transition-timing-function: cubic-bezier(0.575, 0.870, 0.000, 1);
  -o-transition-timing-function: cubic-bezier(0.575, 0.870, 0.000, 1);
  transition-timing-function: cubic-bezier(0.575, 0.870, 0.000, 1);
}

// Scale a view
@mixin scale($scale) {
  -ms-transform: scale($scale);
  -webkit-transform: scale($scale);
  transform: scale($scale);
}

// Shadow
@mixin shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Adds border as... border
@mixin stop-padding-resizing() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; 
}

// Rotates forever
@mixin transition-infinite-rotation($duration) {
  @-webkit-keyframes rotate {
    from {
      -webkit-transform: rotate(0deg);
      -o-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    to {
      -webkit-transform: rotate(360deg);
      -o-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }
  @keyframes rotate {
    from {
      -ms-transform: rotate(0deg);
      -moz-transform: rotate(0deg);
      -webkit-transform: rotate(0deg);
      -o-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    to {
      -ms-transform: rotate(360deg);
      -moz-transform: rotate(360deg);
      -webkit-transform: rotate(360deg);
      -o-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }
  -webkit-animation: rotate $duration linear infinite;
  -moz-animation: rotate $duration linear infinite;
  -ms-animation: rotate $duration linear infinite;
  -o-animation: rotate $duration linear infinite;
  animation: rotate $duration linear infinite;
}

// Animates a scale out
@mixin scale-out($duration) {
  @-webkit-keyframes scale {
    from {
      -webkit-transform: scale(1);
      -o-transform: scale(1);
      transform: scale(1);
    }
    to {
      -webkit-transform: scale(0);
      -o-transform: scale(0);
      transform: scale(0);
    }
  }
  @keyframes scale {
    from {
      -ms-transform: scale(1);
      -moz-transform: scale(1);
      -webkit-transform: scale(1);
      -o-transform: scale(1);
      transform: scale(1);
    }
    to {
      -ms-transform: scale(0);
      -moz-transform: scale(0);
      -webkit-transform: scale(0);
      -o-transform: scale(0);
      transform: scale(0);
    }
  }
  -webkit-animation: scale $duration linear;
  -moz-animation: scale $duration linear;
  -ms-animation: scale $duration linear;
  -o-animation: scale $duration linear;
  animation: scale $duration linear;
}