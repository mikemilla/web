.grid-container {
  background: white;
  width: 100%;

  // Contains the columns
  .keylines {
    widows: 100%;
    @include flex;
    flex-direction: row;
    padding-top: $margin-desktop;
    padding-bottom: $margin-desktop;

    // Catch tablet
    @include device-breakpoint($tablet) {
      flex-direction: column;
      padding-top: $margin-tablet;
      padding-bottom: $margin-tablet;
    }

    // Catch Mobile
    @include device-breakpoint($phone) {
      padding-top: $margin-phone;
      padding-bottom: $margin-phone;
    }

    // Columns
    // This is done because the web still doesn't know
    // how to make modern things (like staggered grids)
    .column {
      flex: 1;
      list-style-type: none;
      padding: 0;

      // Middle child
      &:nth-child(2) {
        margin-left: $margin-desktop;
        margin-right: $margin-desktop;
        @include device-breakpoint($tablet) {
          margin-left: 0;
          margin-right: 0;
        }
      }
    }

  }

  // Contain for button
  .button-container {
    z-index: 1;
    
    // Center button
    @include flex;
    justify-content: center;

    // Button
    a {
      margin-bottom: $margin-desktop;

      // Tablet break
      @include device-breakpoint($tablet) {
        width: 100%;
        margin-left: $margin-tablet;
        margin-right: $margin-tablet;
      }

      // Phone break
      @include device-breakpoint($phone) {
        margin-left: $margin-phone;
        margin-right: $margin-phone;
      }
    }
  }
}

.item {
  position: relative;
  overflow: hidden;
  display: inline-block;
  line-height: 0px; // Fixes bottom gap issue
  margin-bottom: $margin-desktop;
  background: $color-border-solid;
  cursor: pointer;
  @include border($color-border-solid);
  @include corner-radius(10px);
  @include hidden-overlay-fix;

  // Image
  img {
    width: 100%;
    height: auto;
  }

  // Tablet break
  @include device-breakpoint($tablet) {
    margin-bottom: $margin-tablet;
  }

  // Phone break
  @include device-breakpoint($phone) {
    margin-bottom: $margin-phone;
  }

  &.hidden {
    @include transition-ease-in-out(0ms);
    visibility: hidden;
  }

  // Overlay
  .cover {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    visibility: hidden;
    @include corner-radius(10px);
    @include fill-parent;
    background: rgba(white, 0.125);

    // Contains the loading indicator
    // Allows simultaneous animations
    .icon-container {
      @include fill-parent;
      &:after {
          content: '';
          @include fill-parent;
          height: 72px;
          width: 72px;
          background-size: 100% auto;
          background-position: center;
          background-repeat: no-repeat;
      }
    }

    // Set icon for type
    &.video, &.gif {
      .icon-container {
        &:after {
          background-image: url("/assets/icons/icon_play.svg");
        }
      }
    }
    &.photo, &.screenshot {
      .icon-container {
        &:after {
          background-image: url("/assets/icons/icon_fill.svg");
        }
      }
    }
  }

  // Action on hover
  &:hover {
    @include shadow(0px 4px 12px 0px rgba(0, 0, 0, 0.125));
    .cover {
      visibility: visible;
    }

    // Handle when to show specials styles
    @include device-breakpoint($tablet) {
      @include shadow(0px 0px 0px 0px transparent);
      .cover {
        visibility: hidden;
      }
    }
  }

  &.hidden {
    @include transition-ease-in-out(0ms);
    visibility: hidden;
  }
}